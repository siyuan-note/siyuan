{
	"ID": "20201204184532-3qm9l8n",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20201204184532-3qm9l8n",
		"title": "Template snippet",
		"type": "doc",
		"updated": "20240921122726"
	},
	"Children": [
		{
			"ID": "20210428223009-x6fyksm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210428223009-x6fyksm",
				"updated": "20210428223012"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Overview"
				}
			]
		},
		{
			"ID": "20210104091444-bu1zdhb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-bu1zdhb",
				"updated": "20210428232129"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "The template snippet is used to quickly insert the previously set text content at the cursor caret position, and it supports variables. Template snippets use "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".md"
				},
				{
					"Type": "NodeText",
					"Data": " suffix files and are stored in the data/templates folder of the workspace."
				}
			]
		},
		{
			"ID": "20210104091444-jy56z0p",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210104091444-jy56z0p",
				"updated": "20240921122726"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Writing a template"
				}
			]
		},
		{
			"ID": "20210104091444-ycq0a40",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-ycq0a40",
				"updated": "20210502205109"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "The template is implemented using "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://golang.org/pkg/text/template/",
					"TextMarkTextContent": "The Go Programming Language text template"
				},
				{
					"Type": "NodeText",
					"Data": ". If you have an understanding of this, you can implement some program logic in it, such as comparison logic , Iterative logic, etc. In addition, to avoid syntax conflicts, template syntax uses "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".action{action}"
				},
				{
					"Type": "NodeText",
					"Data": " (instead of "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "{{action}}"
				},
				{
					"Type": "NodeText",
					"Data": ")."
				}
			]
		},
		{
			"ID": "20210104091444-c7gg3ak",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-c7gg3ak",
				"updated": "20230820185644"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "We have built-in variables and functions to enrich the template through the open source project Sprig (github repo: Masterminds/sprig). For example, you can use "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": ".action{now | date \u0026quot;2006-01-02 15:04:05\u0026quot;}"
				},
				{
					"Type": "NodeText",
					"Data": "​ to render the current time. For more usage, please refer to "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://masterminds.github.io/sprig/",
					"TextMarkTextContent": "Sprig Function Documentation"
				},
				{
					"Type": "NodeText",
					"Data": "."
				}
			]
		},
		{
			"ID": "20210104091444-i618qd8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-i618qd8",
				"updated": "20210428223421"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "There is a detail about the date and time formatting. "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "tag",
					"TextMarkTextContent": "Note"
				},
				{
					"Type": "NodeText",
					"Data": ": The formatting of the Go programming language is quite special: Instead of using "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "yyyy-MM-dd HH:mm:ss"
				},
				{
					"Type": "NodeText",
					"Data": ", use "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "2006-01-02 15:04: 05"
				},
				{
					"Type": "NodeText",
					"Data": " This fixed time format ("
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://stackoverflow.com/questions/20530327/origin-of-mon-jan-2-150405-mst-2006-in-golang",
					"TextMarkTextContent": "related discussions on Stack Overflow"
				},
				{
					"Type": "NodeText",
					"Data": ")."
				}
			]
		},
		{
			"ID": "20210104091444-2wbdokx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-2wbdokx"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "In addition to the built-in variables and functions of Sprig, the following variables and functions are also supported:"
				}
			]
		},
		{
			"ID": "20210104091444-mwbvc9m",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20210104091444-mwbvc9m",
				"updated": "20240921122726"
			},
			"Children": [
				{
					"ID": "20210104091444-d5hpwdd",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210104091444-d5hpwdd",
						"updated": "20210104091444"
					},
					"Children": [
						{
							"ID": "20210131162138-93wovlc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210131162138-93wovlc",
								"updated": "20210502205126"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "title"
								},
								{
									"Type": "NodeText",
									"Data": "​: Use this variable to insert the current document name. For example, if the template content is "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "# .action{.title}"
								},
								{
									"Type": "NodeText",
									"Data": "​, it will be inserted into the current document content with the first-level heading syntax after invoking"
								}
							]
						}
					]
				},
				{
					"ID": "20210221131637-9xmclwp",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210221131637-9xmclwp",
						"updated": "20210221131637"
					},
					"Children": [
						{
							"ID": "20210221131637-hnlhxny",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210221131637-hnlhxny",
								"updated": "20210428223500"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "id"
								},
								{
									"Type": "NodeText",
									"Data": "​：Use this variable to insert the current document id"
								}
							]
						}
					]
				},
				{
					"ID": "20211213121001-86hu9ws",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211213121001-86hu9ws",
						"updated": "20211213121001"
					},
					"Children": [
						{
							"ID": "20211213121001-qg2k19v",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211213121001-qg2k19v",
								"updated": "20211213121022"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "name"
								},
								{
									"Type": "NodeText",
									"Data": "​: Use this variable to insert the current document name"
								}
							]
						}
					]
				},
				{
					"ID": "20211213121022-33ngo64",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211213121022-33ngo64",
						"updated": "20211213121022"
					},
					"Children": [
						{
							"ID": "20211213121022-un8wzkv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211213121022-un8wzkv",
								"updated": "20211213121038"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "alias"
								},
								{
									"Type": "NodeText",
									"Data": "​：Use this variable to insert the current document alias"
								}
							]
						}
					]
				},
				{
					"ID": "20240921122521-l3lmolm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240921122521-l3lmolm",
						"updated": "20240921122726"
					},
					"Children": [
						{
							"ID": "20240921122521-4qqycah",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240921122521-4qqycah",
								"updated": "20240921122726"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "getHPathByID"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to return the readable path of the block corresponding to the block ID"
								}
							]
						}
					]
				},
				{
					"ID": "20210121193829-wfzsf6m",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210121193829-wfzsf6m",
						"updated": "20240403150956"
					},
					"Children": [
						{
							"ID": "20210131162138-7ufhbho",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210131162138-7ufhbho",
								"updated": "20240403150956"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "queryBlocks"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to query the database, and the return value is a list of blocks,  please refer to the example below"
								}
							]
						}
					]
				},
				{
					"ID": "20210504093232-vukp34t",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20210504093232-vukp34t",
						"updated": "20240403151002"
					},
					"Children": [
						{
							"ID": "20210504093232-6wxl589",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20210504093232-6wxl589",
								"updated": "20240403151002"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "querySpans"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to query the database, and the return value is a list of spans,  please refer to the example below"
								}
							]
						}
					]
				},
				{
					"ID": "20211213121042-5n981ru",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20211213121042-5n981ru",
						"updated": "20211213121210"
					},
					"Children": [
						{
							"ID": "20211213121042-g7gd7p5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211213121042-g7gd7p5",
								"updated": "20211213121210"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "parseTime"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to parse a string in time format into a "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "time.Time"
								},
								{
									"Type": "NodeText",
									"Data": "​ type so that more formatting methods can be used to render the time"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-h7vi1dh",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-h7vi1dh",
						"updated": "20240308162632"
					},
					"Children": [
						{
							"ID": "20240308162632-en6g3fm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-en6g3fm",
								"updated": "20240308162632"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Weekday"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to return the day of the week "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Sunday=0, Monday=1, ..., Saturday=6"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-s5ipztw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-s5ipztw",
						"updated": "20240308162652"
					},
					"Children": [
						{
							"ID": "20240308162632-r20wx9o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-r20wx9o",
								"updated": "20240308162652"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WeekdayCN"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to return the day of the week "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Sunday=日, Monday=一, ..., Saturday=六"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-9e9ytoj",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-9e9ytoj",
						"updated": "20240308162700"
					},
					"Children": [
						{
							"ID": "20240308162632-dhivcod",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-dhivcod",
								"updated": "20240308162700"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "WeekdayCN2"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to return the day of the week "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "Sunday=天, Monday=一, ..., Saturday=六"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-3ec0qtk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-3ec0qtk",
						"updated": "20240308162632"
					},
					"Children": [
						{
							"ID": "20240308162632-akk8sxn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-akk8sxn",
								"updated": "20240308162632"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ISOWeek"
								},
								{
									"Type": "NodeText",
									"Data": "​: This function is used to return the week"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-essiuhv",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-essiuhv",
						"updated": "20240308162717"
					},
					"Children": [
						{
							"ID": "20240308162632-usz39m7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-usz39m7",
								"updated": "20240308162717"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "pow"
								},
								{
									"Type": "NodeText",
									"Data": "​: Exponential calculation, return an integer"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-iekhm3w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-iekhm3w",
						"updated": "20240308162721"
					},
					"Children": [
						{
							"ID": "20240308162632-rxfovte",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-rxfovte",
								"updated": "20240308162721"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "powf"
								},
								{
									"Type": "NodeText",
									"Data": "​: Exponential calculation, return a floating point number"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-v8vhchs",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-v8vhchs",
						"updated": "20240308162730"
					},
					"Children": [
						{
							"ID": "20240308162632-2lzssxv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-2lzssxv",
								"updated": "20240308162730"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "log"
								},
								{
									"Type": "NodeText",
									"Data": "​: Logarithmic calculation, returns an integer"
								}
							]
						}
					]
				},
				{
					"ID": "20240308162632-4wa3g3n",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20240308162632-4wa3g3n",
						"updated": "20240308162724"
					},
					"Children": [
						{
							"ID": "20240308162632-27ni8cf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20240308162632-27ni8cf",
								"updated": "20240308162724"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "logf"
								},
								{
									"Type": "NodeText",
									"Data": "​: Logarithmic calculation, return a floating point number"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20210604111714-yc1e5gj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210604111714-yc1e5gj",
				"updated": "20210604111715"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "queryBlocks"
				},
				{
					"Type": "NodeText",
					"Data": " and "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "querySpans"
				},
				{
					"Type": "NodeText",
					"Data": " support variable parameter lists similar to SQL prepared statements to facilitate the input of parameters:"
				}
			]
		},
		{
			"ID": "20210604111750-c3sm3jr",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20210604111750-c3sm3jr",
				"updated": "20210604111632"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker"
				},
				{
					"ID": "20220307092214-3yza25q",
					"Type": "NodeCodeBlockCode",
					"Data": ".action{$today := now | date \"20060102150405\"}\n.action{$blocks :=queryBlocks \"SELECT * FROM blocks WHERE content LIKE '?' AND updated \u003e '?' LIMIT ?\" \"%foo%\" $today \"3\"}\n",
					"Properties": {
						"id": "20220307092214-3yza25q"
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20210104091444-4re70bp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210104091444-4re70bp"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "Invoke template"
				}
			]
		},
		{
			"ID": "20210104091444-gfccosk",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-gfccosk",
				"updated": "20210428223517"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "At the cursor caret position, select the template via "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "/"
				},
				{
					"Type": "NodeText",
					"Data": " to trigger the template search, find the template that needs to be inserted and press Enter."
				}
			]
		},
		{
			"ID": "20210104091444-xz57sof",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210104091444-xz57sof"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## "
				},
				{
					"Type": "NodeText",
					"Data": "An example"
				}
			]
		},
		{
			"ID": "20210104091444-cclnk66",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "cGxhaW50ZXh0",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20210104091444-cclnk66"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "cGxhaW50ZXh0"
				},
				{
					"ID": "20220307092214-3y1eex2",
					"Type": "NodeCodeBlockCode",
					"Data": ".action{$before := (div (now.Sub (toDate \"2006-01-02\" \"2020-02-19\")).Hours 24)}\n\n.action{$after := (div ((toDate \"2006-01-02\" \"2048-02-19\").Sub now).Hours 24)}\nToday is `.action{now | date \"2006-01-02\"}`.\n\n* `.action{$before}` days have passed since `2020-02-19`\n* There are `.action{$after}` days left from `2048-02-19`\n",
					"Properties": {
						"id": "20220307092214-3y1eex2"
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3
				}
			]
		},
		{
			"ID": "20210104091444-rku6ohp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210104091444-rku6ohp"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$before"
				},
				{
					"Type": "NodeText",
					"Data": " and "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "$after"
				},
				{
					"Type": "NodeText",
					"Data": " define two variables to record the number of days from the current date to 2020 and 2048, respectively."
				}
			]
		},
		{
			"ID": "20210131162806-sk9tg4q",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20210131162806-sk9tg4q",
				"updated": "20230418085727"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Push to template marketplace"
				}
			]
		},
		{
			"ID": "20221114173406-3h4imbx",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221114173406-3h4imbx",
				"updated": "20230820184302"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Please refer to "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://b3log.org/siyuan/en/community.html",
					"TextMarkTextContent": "Community marketplace repo"
				},
				{
					"Type": "NodeText",
					"Data": "."
				}
			]
		},
		{
			"ID": "20210131162142-6g1r08m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20210131162142-6g1r08m"
			}
		}
	]
}